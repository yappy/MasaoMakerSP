/*
 * This source file was generated by the Gradle 'init' task
 */
package io.github.yappy.mccport;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.Panel;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

public abstract class AppletMod extends Panel implements Runnable {

    // must access with synchronized(this)
    private class SharedState {
        boolean isStarted = false;
        Thread mcThread = null;
        boolean isExiting = false;
    }

    private SharedState sharedState = new SharedState();
    private Map<String, String> parameters = new HashMap<>();
    private Map<String, Image> images = new HashMap<>();
    private Map<String, AudioClipMod> sounds = new HashMap<>();

    public AppletMod() {
        super();
        System.out.println("AppletMod constructor");
        setSize(McMod.MC_APPLET_W, McMod.MC_APPLET_H);
        setPreferredSize(new Dimension(McMod.MC_APPLET_W, McMod.MC_APPLET_H));
    }

    public void setParameter(String name, String value) {
        synchronized (sharedState) {
            if (sharedState.isStarted) {
                throw new IllegalStateException("already started");
            }
        }
        parameters.put(name, value);
    }

    public void setParameter(Map<String, String> parameters) {
        synchronized (sharedState) {
            if (sharedState.isStarted) {
                throw new IllegalStateException("already started");
            }
        }
        this.parameters.putAll(parameters);
    }

    public void setImage(String name, Image image) {
        synchronized (sharedState) {
            if (sharedState.isStarted) {
                throw new IllegalStateException("already started");
            }
        }
        images.put(name, image);
    }

    public void setImage(Map<String, Image> images) {
        synchronized (sharedState) {
            if (sharedState.isStarted) {
                throw new IllegalStateException("already started");
            }
        }
        this.images.putAll(images);
    }

    public void setSound(String name, AudioClipMod sound) {
        synchronized (sharedState) {
            if (sharedState.isStarted) {
                throw new IllegalStateException("already started");
            }
        }
        sounds.put(name, sound);
    }

    public void setSound(Map<String, AudioClipMod> sounds) {
        synchronized (sharedState) {
            if (sharedState.isStarted) {
                throw new IllegalStateException("already started");
            }
        }
        this.sounds.putAll(sounds);
    }

    public void startup() {
        synchronized (sharedState) {
            if (sharedState.isStarted) {
                throw new IllegalStateException("already started");
            }
            sharedState.isStarted = true;
        }
        // MasaoConstruction#start() will do nothing
        init();
        // MasaoConstruction#start() will start a thread
        // run() will be executed in a separated thread
        start();
    }

    public abstract void runHooked();

    // MasaoConstruction#start() will start a thread
    // Raname: MasaoConstruction#run() => runHooked()
    // MasaoConstruction will not implement run() and will implement runHooked()
    // instead
    @Override
    public void run() {
        System.out.println("AppletMod run start");
        synchronized (sharedState) {
            if (sharedState.isExiting) {
                System.out.println("AppletMod run end (without runHooked)");
                return;
            }
            sharedState.mcThread = Thread.currentThread();
        }
        runHooked();
        System.out.println("AppletMod run end (runHooked was interrupted)");
    }

    public void shutdown() {
        synchronized (sharedState) {
            if (!sharedState.isStarted) {
                throw new IllegalStateException("not started");
            }
            sharedState.isExiting = true;
            if (sharedState.mcThread != null) {
                sharedState.mcThread.interrupt();
            }
        }
        // MasaoConstruction#stop() will do { this.th = null; }
        // It is meaningless...
        stop();
        // MasaoConstruction#destroy() will do nothing
        destroy();
    }

    // ----- java.applet.Applet compatible (Do not call directly) -----

    public String getParameter(String name) {
        String value = parameters.get(name);
        System.out.printf("AppletMod getParameter: %s=%s%n", name, value);
        return value;
    }

    public URL getDocumentBase() {
        System.out.println("AppletMod getDocumentBase: null");
        return null;
    }

    public Image getImage(URL url, String name) {
        System.out.printf("AppletMod getImage: %s, %s%n", url, name);
        return images.get(name);
    }

    public AudioClipMod getAudioClip(URL url, String name) {
        System.out.printf("AppletMod getAudioClip: %s, %s%n", url, name);
        return sounds.get(name);
    }

    public void init() {
        System.out.println("AppletMod init");
    }

    public void start() {
        System.out.println("AppletMod start");
    }

    public void stop() {
        System.out.println("AppletMod stop");
    }

    public void destroy() {
        System.out.println("AppletMod destroy");
    }

    // public void paint(java.awt.Graphics g) {
    // System.out.println("paint");
    // }

    // public void update(java.awt.Graphics g) {
    // System.out.println("update");
    // }

}
