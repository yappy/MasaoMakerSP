/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api libs.commons.math3

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation libs.guava
    implementation libs.javassist
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

test {
    /*
     * Since Java 17, reflection fails with the following error
     * without --add-opens.
     *
     * java.lang.reflect.InaccessibleObjectException:
     * Unable to make protected final java.lang.Class
     * java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int) throws
     * java.lang.ClassFormatError accessible:
     * module java.base does not "opens java.lang" to unnamed module @4f72cce0
     */
    jvmArgs = ["--add-opens=java.base/java.lang=ALL-UNNAMED"]
}
